# it returns the number of times a certain pattern occurs in a Text, including overalapping patterns
def PatternCount(Text, Pattern):
    count = 0
    for x in range(len(Text) + 1):
        if Text[x:x+len(Pattern)] == Pattern:
            count += 1
    return count


# it returns 31
# print PatternCount("AGAAACGTGTAAAACGTGTGGAACGTGTTCAAGACTACTGAAACGTGTAACAACGTGTCGAAAACGTGTAACGTGTATAAAGAACGTGTGCAGAACGT
# GTAAACGTGTCATAACGTGTAACGTGTGCTTAACGTGTAACGTGTTAGAAACGTGTGAACGTGTAACGTGTAAGCGAACGTGTCTAACGTGTGGCAGTAGATTACAAACAAAACGTGT
# TTTAACGTGTATAACGTGTAACGTGTCAACGTGTTTCCCGAAACGTGTAACGTGTTAAACGTGTAAAAACGTGTACAACGTGTCAAACGTGTAACGTGTAGCTAATTAACGTGTCGGT
# GCCCAACGTGTGATTGGAGCAACGTGTTCCCCAACGTGTAACGTGTTTAACGTGTCAACGTGTCCAACGTGTAACGTGTTAGGGATGGCAACGTGTCAACGTGTAGAAAACGTGTATA
# AACGTGTCACTGGAACGTGTAACGTGTTAACGTGTCTCACCAACGTGTATTAACGTGTACCAACGTGTCGAAACGTGTAACGTGTAACGTGTCAACGTGTAACGTGTTAAACGTGTAA
# CGTGTAACGTGTCGAACGTGTAACGTGTTCCGAACGTGTCGAACGTGTTGAAACGTGTCTGAACGTGTAACGTGTAAACGTGTCTCGAACGTGTGTACATAACGTGTAACGTGTAAAA
# CGTGTTTCTGCAAAAAACGTGTAACGTGTAACGTGTGGTGCTGAAACGTGTCGGAACGTGTCGGTAGAACGTGTAAGGGTAACGTGTAACGTGTCCCTCAAACGTGTTAACGTGTAAC
# GTGTGATGTCCAACGTGTTGGAAACGTGTTTGCAAACGTGTTAACGTGTCCAACGTGTGAAAACGTGTTGGAACGTGTTCTAACGTGTTCGGCAGCGACGCTAACGTGTAACGTGTCC
# AACGTGTCTGAACGTGTTTTTAACGTGTGAACGTGTCGACAACGTGT", "AACGTGTAA")
# it returns 22
# print PatternCount("TAAGGATTCTGGCAGATTCTGGATTCTGGGCAGATTCTGGTCTTGATTCTGGGATTCTGCGCCGATTCTGGATTCTGTTGAGATTCTGTGATTCTGAT
# AGGATTCTGGTGATTCTGAAAATTGCCTTTGTGATTCTGCGATTCTGAGATTCTGCATCAGATTCTGTGACCAACAGACGATTCTGGAGGCGATTCTGAGCCTTTTCCCGATTCTGAA
# CGATTCTGGATTCTGGATTCTGGATTCTGCCGATTCTGTCTAGATTCTGGCTCCTAGATTCTGGATTCTGCAGATTCTGCCTCGCAGATTCTGTGAATGGGCCCGATTCTGAGATTCT
# GTGATTCTGCGGATTCTGCGATTCTGGATTCTGGATTCTGGGAGATTCTGGATTCTGTCAGATTCTGCAACGTTTACCGTTTAGATTCTGCGATTCTGGCGGCGGATTCTGTCGACTG
# ATTCTGCGATTCTGGATTCTGACCAACAAGATTCTGGATTCTGCGATTCTGACGGATTCTGGATTCTGGGATTCTGGATTCTGCGCGATTCTGCTGATTCTGCGTCTAGATTCTGAGA
# TTCTGGATTCTGCGATTCTGCCGATTCTGCAGCTCGGGATTCTGGACGCATTGATTCTGACGATTCTGGATTCTGGATTCTGCGATTCTGGTGATTCTGTCGATTCTGGATTCTGCAT
# GTTGATTCTGCCCTCGATTCTGATGATTCTGGATTCTGTCACGATTCTGGATTCTGTAGATTCTGATGATTCTGTGAGCGAGATTCTGTGATTCTGGGAGGATTCTGGCCTCGCGATT
# CTGCTTTGCCTGATTCTGGAGAAATTCGTTACGATTCTGCCGATTCTGCATACGAGGTGAGGATTCTGGTGGATTCTGTGGATTCTGTGGCTACCCCGAGGATTCTGATTGGATTCTG
# TAA", "GATTCTGGA")